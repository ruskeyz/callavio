{"version":3,"sources":["components/Signin.js","components/TwilioVideos.js","App.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Signin","setToken","setName","setRoom","name","room","handleSubmit","event","a","axios","post","identity","result","data","console","log","onFinish","Item","label","id","value","onChange","e","target","rules","required","message","initialValue","valuePropName","type","htmlType","TwilioVideos","token","localVideoRef","useRef","remoteVideoRef","appendNewParticipant","track","chat","document","createElement","setAttribute","appendChild","attach","current","useEffect","TwilioVideo","connect","video","audio","then","createLocalVideoTrack","addParticipant","participant","tracks","forEach","publication","isSubscribed","on","participants","element","getElementById","parentNode","removeChild","catch","ref","App","useState","className","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a55e9332.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Card, Form, Input, Button, Checkbox } from 'antd';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 8 },\n};\n\nconst Signin = ({ setToken, setName, setRoom, name, room }) => {\n  const handleSubmit = async (event) => {\n    const result = await axios.post(\n      'https://video-call-5385-dev.twil.io/video-token',\n      {\n        identity: name,\n        room: room,\n      }\n    );\n    setToken(result.data);\n    console.log('Got token', result.data);\n  };\n\n  return (\n    <Card>\n      <Form {...layout} onFinish={handleSubmit}>\n        <Form.Item\n          label='Username'\n          name='name'\n          id='name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label='Room'\n          name='room'\n          id='room'\n          initialValue={room}\n          value={room}\n          onChange={(e) => setRoom(e.target.value)}\n          rules={[{ required: true, message: 'Please input your room!' }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type='primary' htmlType='submit'>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Signin;\n","import React, { useRef, useEffect } from 'react';\nimport { Card } from 'antd';\nimport TwilioVideo from 'twilio-video';\n\nconst TwilioVideos = ({ token, room }) => {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n\n  const appendNewParticipant = (track, identity) => {\n    const chat = document.createElement('div');\n    chat.setAttribute('id', identity);\n    chat.appendChild(track.attach());\n    remoteVideoRef.current.appendChild(chat);\n  };\n  useEffect(() => {\n    console.log(token);\n    TwilioVideo.connect(token, {\n      video: true,\n      audio: true,\n      name: room,\n    })\n      .then((room) => {\n        console.log('Connected to callav.io');\n        TwilioVideo.createLocalVideoTrack().then((track) => {\n          localVideoRef.current.appendChild(track.attach());\n        });\n        const removeParticipant = (participant) => {\n          console.log('Removing participant by id', participant.identity);\n          const element = document.getElementById(participant.identity);\n          element.parentNode.removeChild(element);\n        };\n        const addParticipant = (participant) => {\n          console.log('Participant added');\n          participant.tracks.forEach((publication) => {\n            if (publication.isSubscribed) {\n              const track = publication.track;\n              appendNewParticipant(track, participant.identity);\n              console.log('Attached a track');\n            }\n          });\n          participant.on('trackSubscribed', (track) => {\n            console.log('Appending new track');\n            appendNewParticipant(track, participant.identity);\n          });\n        };\n        room.participants.forEach(addParticipant);\n        room.on('participantConnected', addParticipant);\n        room.on('participantDisconnected', removeParticipant);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    return () => {};\n  }, [token, room]);\n  return (\n    <Card>\n      <h1>Your are in room : {room}</h1>\n      <div ref={localVideoRef}></div>\n      <div ref={remoteVideoRef}></div>\n    </Card>\n  );\n};\n\nexport default TwilioVideos;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Signin from './components/Signin';\nimport TwilioVideos from './components/TwilioVideos';\n\nfunction App() {\n  const [token, setToken] = useState('');\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('Primary Room');\n  return (\n    <div className='App'>\n      {!token ? (\n        <Signin\n          setToken={setToken}\n          setName={setName}\n          name={name}\n          setRoom={setRoom}\n          room={room}\n        />\n      ) : (\n        <TwilioVideos token={token} room={room} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}